<?php
/**
 * Created by PhpStorm.
 * User: miunh
 * Date: 06-Jul-16
 * Time: 10:22 AM
 */
defined('BASEPATH') OR exit('No direct script access allowed');

/**
 * Class Warehouse_activity_manage
 */
class Warehouse_activity_manage extends Manager_base {
    function __construct() {
        parent::__construct();
        $this->is_in_group(['admin', 'corporation', 'ppc', 'warehouse_manager'], TRUE);
        $this->load->model('M_order', 'order');
        $this->load->model('M_materials', 'm_materials');
        $this->load->model('M_material_balances', 'm_material_balances');
        $this->load->model('M_warehouse_activity', 'm_warehouse_activity');
        $this->load->model('M_warehouses', 'warehouses');
        $this->load->model('M_line', 'lines');
        $this->load->model('M_warehouse_activity_items', 'warehouse_activity_items');
        $this->load_more_js("assets/js/page/warehouse/warehouse.js", TRUE);
        $this->load_more_css("assets/css/page/warehouse.css");
    }

    public function setting_class() {
        // TODO: Implement setting_class() method.
        $this->name = Array(
            "class"  => "warehouse_activity_manage",
            "view"   => "warehouse_activity_manage",
            "model"  => "m_warehouse_activity_manage",
            "object" => "lần xuất nhập NPL",
        );
    }

    public function index() {
        $this->load_more_css("assets/plugins-bower/bootstrap-datepicker/dist/css/bootstrap-datepicker.css");
        $this->load_more_js("assets/plugins-bower/bootstrap-datepicker/dist/js/bootstrap-datepicker.js", TRUE);
        parent::index(); // TODO: Change the autogenerated stub
    }

    public function manager($data = Array()) {
        $data['add_link'] = 'warehouse_activity_manage/warehouse_export';
        return parent::manager($data);
    }

    /**
     * to load form add
     */
    public function warehouse_export() {
        $data = Array();
        if (!isset($data["save_link"])) {
            $data["save_link"] = site_url($this->name["class"] . "/save_order_material");
        }
        $data['warehouses'] = $this->warehouses->get_all();
        $data['lines'] = $this->lines->get_all();
        $where = [
        ];
        $data['materials'] = $this->m_material_balances->get_list_filter($where, [], []);
        $content = $this->load->view("company/warehouse/export_wh", $data, TRUE);
        $this->set_data_part("title", "Thêm  " . $this->name["object"], FALSE);
        $data_return = Array();
        if ($this->input->is_ajax_request()) {
            $data_return["state"] = 1;
            $data_return["html"] = $content;
            echo json_encode($data_return);
            return TRUE;
        } else {
            $this->show_page($content);
        }
    }

    public function save_order_material($data = Array(), $data_return = Array(), $skip_validate = FALSE) {
        if (sizeof($data) == 0) {
            $data = $this->input->post();
        }
        $wh_activity = [
            'type'          => $data["type"],
            'date'          => $data["date"],
            'warehouse_id'  => $data["warehouse_name"],
            'note'          => $data["note"],
            'material_pack' => $data["id_lot"],
        ];
        $data_return["callback"] = "save_form_add_response";
        $wh_activity_id = $this->m_warehouse_activity->insert($wh_activity, TRUE);
        if (!$wh_activity_id) {
            $data_return["state"] = 0;
            $data_return["msg"] = "Thêm bản ghi thất bại do lỗi server, vui lòng thử lại hoặc liên hệ quản lý hệ thống!";
            echo json_encode($data_return);
            return FALSE;
        }

        $weight_count = $data["weight_count"];
        for ($i = 0; $i < $weight_count; $i++) {
            $new_weight_detail = [
                'material_balance_id' => $data["material_name_$i"],
                'quantity'            => $data["quantity_$i"],
                'activity_id'         => $wh_activity_id,
                'note'                => $data["item_note_$i"],
            ];
            $insert_size_id = $this->warehouse_activity_items->insert($new_weight_detail, TRUE);

            if (!$insert_size_id) {
                $data_return["state"] = 0; /* state = 2 : Lỗi thêm bản ghi */
                $data_return["msg"] = "Thêm bản ghi thất bại do lỗi server, vui lòng thử lại hoặc liên hệ quản lý hệ thống!";
                echo json_encode($data_return);
                return FALSE;
            }
        }
        $data_return["callback"] = "save_form_add_response";
//        $data_return["key_name"] = $key_field;
//            $data_return["record"] = $data_validated;
        $data_return["state"] = 1; /* state = 1 : insert thành công */
        $data_return["msg"] = "Thêm bản ghi thành công";
//            $data_return["redirect"] = $this->url["manager"];
        echo json_encode($data_return);
    }
}